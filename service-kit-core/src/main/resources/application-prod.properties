spring.application.name=ebreshna-v1
server.port=7010
server.address=localhost
server.max-http-header-size=9999999


spring.main.allow-bean-definition-overriding=true
# Revision Default Schema
spring.jpa.properties.org.hibernate.envers.default_schema=revision 

#Metrics related configurations
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.export.graphite.step=1s



#CORS Config
anar.cors.allowed-origin=*
anar.cors.allowed-method=*
anar.cors.allowed-header=*


# Keycloak Configuration
keycloak.auth-server-url=http://identity.dabs.af:8080/auth
keycloak.realm=ebreshna
keycloak.resource=ebreshna-app
keycloak.public-client=true
keycloak.bearer-only = true
#keycloak.cors = true
keycloak.enabled = true
#keycloak.ssl-required=external
#keycloak.confidential-port=0
keycloak.use-resource-role-mappings=true
keycloak.ssl-required=external
keycloak.principal-attribute=preferred_username
admin.user=ebreshna
admin.password=secret
#keycloak.ssl-required=external
#keycloak.confidential-port=0
#use-resource-role-mappings=true

### Installation Config
anar.reg.client.url=https://anar.io/release-libs
anar.reg.env=qa
anar.reg.version=1.0.0
anar.reg.mdm.server.port=8080
anar.reg.logpath=../logs
anar.reg.packetstorepath=../PacketStore
anar.reg.healthcheck.url=https\://qa.anar.io/v1/authmanager/actuator/health
anar.reg.rollback.path=../BackUp
anar.reg.db.key=bW9zaXAxMjM0NQ\=\=
anar.reg.cerpath=/cer//anar_cer.cer
anar.reg.xml.file.url=https\://devops.anar.io/artifactory/libs-release/io/anar/registration/registration-client/maven-metadata.xml
anar.reg.dbpath=db/reg
anar.reg.app.key=bBQX230Wskq6XpoZ1c+Ep1D+znxfT89NxLQ7P4KFkc4\=
anar.reg.client.tpm.availability=N





spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext


## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://10.10.100.98:5432/sbreshna
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username= ebreshna_user
spring.datasource.password= sBr3sh@_D0B3_1235

spring.jpa.open-in-view=false

## serialization of lazyloaded relationship causes to error when objects not loaded
spring.jackson.serialization.fail-on-empty-beans=false

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL82Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update


spring.jpa.show-sql=false

# logging
logging.level.root=error
logging.level.com.lankydan.service=error
logging.path=application/logs
logging.file=${logging.path}/sbreshna_log.log
logging.pattern.file=%black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] %yellow(%C{1.}): %msg%n%throwable
logging.pattern.console=%black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] %yellow(%C{1.}): %msg%n%throwable

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


# Kafka Connect Host
kafka.connect.host=http://localhost:8083
#Kafka Rest Host
kafka.rest.host=http://localhost:9092
#Schema URL
kafka.schema.url=http://localhost:8081
tpd.topic-name=default-topic
# file upload directory
upload.dir = /sbreshna/uploads/
layout.dir = /sbreshna/templates/
layout.uploads =/sbreshna/layouts/
anar.lib.pdf.pdf_owner_password = 'breshna12345'

#upload file max limit
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.file-date-format=.yyyy/MM/dd
server.tomcat.basedir=logs
server.tomcat.accesslog.directory=logs
server.tomcat.accesslog.pattern=common
